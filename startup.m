%STARTUP    Sets up Matlab/Octave path & javaclasspath for SEIZMO
%
% If you can't edit your paths or don't want seizmo on your default
% path then use run this script (or add it to your own startup file)
% to get seizmo working.  Note you need to edit the variable "path"
% below to match the directory seizmo is installed in -- I have
% seizmo files (like this) under directory "/opt/seizmo/seizmo".
% Also note that this startup assumes that the external programs
% have been downloaded too -- comment those lines out if you have
% not done so.

% !!! MODIFY PATH TO MATCH YOUR SEIZMO INSTALL DIRECTORY !!!
% Current setting below is only valid when this file is in the seizmo
% directory.  So if you run this script from anywhere else you need
% "path" to be the seizmo directory (absolute path required).
path=fileparts(mfilename('fullpath')); % Valid only in seizmo directory.
%path='/opt/seizmo/seizmo'; % Valid anywhere on my system.

% path separator
fs=filesep;

% adding seizmo folders to the top of the path
addpath(path,...
    [path fs 'lowlevel'],...
    [path fs 'uninstall'],...
    [path fs 'behavior'],...
    [path fs 'toc'],...
    [path fs 'rw'],...
    [path fs 'hdr'],...
    [path fs 'sz'],...       % from here up is the "core" of seizmo
    [path fs 'misc'],...
    [path fs 'time'],...
    [path fs 'position'],...
    [path fs 'audio'],...
    [path fs 'cmap'],...
    [path fs 'cmb'],...
    [path fs 'cmt'],...
    [path fs 'decon'],...
    [path fs 'event'],...
    [path fs 'filtering'],...
    [path fs 'fixes'],...
    [path fs 'fk'],...
    [path fs 'ftran'],...
    [path fs 'gui'],...
    [path fs 'invert'],...
    [path fs 'mapping'],...
    [path fs 'models'],...
    [path fs 'multi'],...
    [path fs 'noise'],...
    [path fs 'ocean'],...
    [path fs 'pick'],...
    [path fs 'plotting'],...
    [path fs 'resampling'],...
    [path fs 'response'],...
    [path fs 'shortnames'],...
    [path fs 'solo'],...
    [path fs 'sphpoly'],...
    [path fs 'synth'],...
    [path fs 'tomo'],...
    [path fs 'topo'],...
    [path fs 'tpw'],...
    [path fs 'ttcorrect'],...
    [path fs 'win'],...
    [path fs 'ww3'],...
    [path fs 'xc'],...
    [path fs 'xcalign'],...
    [path fs 'mattaup']);

% adding the jars for mattaup is not necessary for
% taup*.m but you might want to do this now if you
% directly use the jars or objects for some reason
jars=dir([path fs 'mattaup' fs 'lib' fs '*.jar']);
for i=1:numel(jars)
    if(~ismember([path fs 'mattaup' fs 'lib' ...
            fs jars(i).name],javaclasspath))
        javaaddpath([path fs 'mattaup' fs 'lib' fs jars(i).name]);
    end
end

% these are the additional folders for external programs
addpath([path fs 'export_fig'],...
    [path fs 'gshhg'],...
    [path fs 'm_map'],...
    [path fs 'm_map_fixes'],...
    [path fs 'njtbx' fs 'njToolbox-2.0'],...
    [path fs 'njtbx' fs 'njToolbox-2.0' fs 'examples'],...
    [path fs 'njtbx' fs 'njToolbox-2.0' fs 'njFunc'],...
    [path fs 'njtbx' fs 'njToolbox-2.0' fs 'njTBX-2.0'],...
    [path fs 'njtbx' fs 'njToolbox-2.0' fs 'njTBX-2.0' fs 'Utilities']);

% jars (2 of them) for external program njtbx
% - used by WW3 functions (analyze ocean waves & seismic noise)
jars=dir([path fs 'njtbx' fs '*.jar']);
for i=1:numel(jars)
    if(~ismember([path fs 'njtbx' fs jars(i).name],javaclasspath))
        javaaddpath([path fs 'njtbx' fs jars(i).name]);
    end
end
